# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the project is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Controller\View\:
        resource: '../src/Controller/View'
        tags: [ 'controller.service_arguments' ]

    App\Controller\Api\:
        resource: '../src/Controller/Api'
        tags: [ 'controller.service_arguments' ]

    App\Twig\EnvExtension:
        tags: ['twig.extension']

    App\Listeners\AuthenticationSuccessListener:
        arguments: [ '%lexik_jwt_authentication.token_ttl%' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess, priority: -2 }

    App\Listeners\RefreshedTokenListener:
        arguments: [ '%gesdinet_jwt_refresh_token.ttl%' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationSuccess, priority: -2 }


    #    App\Listeners\JWTNotFoundListener:
#        tags:
#            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound, priority: 0 }


    App\Controller\View\RegistrationController:
        arguments:
            $userService: '@App\Services\UserService'

    App\Controller\View\TaskController:
        arguments:
            $taskService: '@App\Services\TaskService'

    App\Services\FilterService:
        calls:
            - ['addFilter', ['createdBy', '@App\Doctrine\Filters\CreatedByFilter']]
            - ['addFilter', ['title', '@App\Doctrine\Filters\TitleFilter']]
            - ['addFilter', ['priority', '@App\Doctrine\Filters\PriorityFilter']]
            - ['addFilter', ['status', '@App\Doctrine\Filters\StatusFilter']]
            - ['addFilter', ['orderBy', '@App\Doctrine\Filters\Ordering']]


